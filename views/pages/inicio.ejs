<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controle de Estoque</title>
    <style>
        /* (Seu CSS permanece o mesmo) */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }

        body {
            background: #f5f7fa;
            overflow-x: hidden;
        }

        /* Header */
        .header-container {
            display: flex;
            align-items: center;
            padding: 15px 25px;
            background: #E08C27; /* Laranja */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 10;
        }

        /* Menu Hambúrguer - Posicionado à esquerda */
        .hamburger-menu {
            background: none;
            border: none;
            cursor: pointer;
            padding: 10px;
            height: 40px;
            width: 40px;
            position: relative;
            z-index: 100;
            margin-right: 15px;
        }

        .hamburger-icon {
            display: block;
            width: 24px;
            height: 2px;
            background: #FFFFFF; /* Branco */
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.3s ease;
        }

        .hamburger-icon:before,
        .hamburger-icon:after {
            content: '';
            display: block;
            width: 24px;
            height: 2px;
            background: #FFFFFF; /* Branco */
            position: absolute;
            left: 0;
            transition: all 0.3s ease;
        }

        .hamburger-icon:before {
            top: -8px;
        }

        .hamburger-icon:after {
            top: 8px;
        }

        .hamburger-menu.active .hamburger-icon {
            background: transparent;
        }

        .hamburger-menu.active .hamburger-icon:before {
            transform: translateY(8px) rotate(45deg);
            background: #FFFFFF; /* Branco (cor do X quando o menu está aberto) */
        }

        .hamburger-menu.active .hamburger-icon:after {
            transform: translateY(-8px) rotate(-45deg);
            background: #FFFFFF; /* Branco (cor do X quando o menu está aberto) */
        }

        /* Título ajustado */
        .page-title {
            color: #FFFFFF; /* Branco */
            font-size: 1.8rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin: 0 auto 0 0;
            padding-left: 20px;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: max-content;
        }

        /* Barra de Pesquisa - Posicionada à direita */
        .search-container {
            display: flex;
            align-items: center;
            background: #0E7F1B; /* Verde */
            border-radius: 30px;
            padding: 5px 15px;
            transition: all 0.3s;
            margin-left: auto;
        }

        .search-container:focus-within {
            box-shadow: 0 0 0 2px #E08C27; /* Laranja para foco */
        }

        .search-input {
            border: none;
            background: transparent;
            color: #FFFFFF; /* Branco */
            padding: 8px;
            width: 180px;
            outline: none;
            font-size: 1rem;
        }

        .search-input::placeholder {
            color: #f0f0f0; /* Um branco mais suave para o placeholder */
        }

        .search-button {
            background: none;
            border: none;
            cursor: pointer;
            padding: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .search-icon {
            width: 18px;
            height: 18px;
            fill: none;
            stroke: #FFFFFF; /* Branco */
            stroke-width: 2;
            stroke-linecap: round;
            stroke-linejoin: round;
        }

        /* Menu de Navegação - Agora como menu lateral */
        .nav-menu {
            position: fixed;
            top: 0;
            left: -300px;
            width: 250px;
            height: 100vh;
            background: #0E7F1B; /* Verde */
            transition: left 0.4s ease;
            z-index: 5;
            padding-top: 80px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2);
        }

        .nav-menu.active {
            left: 0;
        }

        .nav-menu ul {
            list-style: none;
            padding: 20px;
        }

        .nav-menu li {
            margin-bottom: 15px;
        }

        .nav-menu a {
            color: #FFFFFF; /* Branco */
            text-decoration: none;
            font-size: 1.1rem;
            transition: color 0.3s;
            display: block;
            padding: 12px 15px;
            border-radius: 5px;
        }

        .nav-menu a:hover {
            color: #E08C27; /* Laranja no hover */
            background: rgba(255, 255, 255, 0.1);
        }

        /* Overlay para quando o menu estiver aberto */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 4;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0.3s;
        }

        .overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Novos estilos para a tabela */
        .main-content {
            padding: 20px;
            margin-top: 20px;
            overflow-x: auto;
        }

        .products-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            background: white;
        }

        .products-table th,
        .products-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
        }

        .products-table th {
            background-color: #E08C27; /* Laranja */
            color: white;
            font-weight: 600;
            position: sticky;
            top: 0;
        }

        .products-table tr:hover {
            background-color: #f5f5f5;
        }

        .highlight {
            background-color: yellow;
            font-weight: bold;
        }

        .no-results {
            text-align: center;
            padding: 20px;
            color: #666;
            background: white;
            margin-top: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .quantidade-low {
            color: #e74c3c; /* Mantido para indicar baixa quantidade */
            font-weight: bold;
        }

        .quantidade-normal {
            color: #0E7F1B; /* Verde */
        }

        .uppercase-input {
            text-transform: uppercase;
        }

        .uppercase-input::placeholder {
            text-transform: none;
        }
    </style>
</head>

<body>
    <header>
        <div class="header-container">
            <button class="hamburger-menu" aria-label="Abrir menu">
                <span class="hamburger-icon"></span>
            </button>

            <h1 class="page-title">ESTOQUE</h1>

            <div class="search-container">
                <input type="text" placeholder="Pesquisar..." class="search-input uppercase-input"
                    oninput="this.value = this.value.toUpperCase()">
                <button class="search-button" aria-label="Pesquisar">
                    <svg class="search-icon" viewBox="0 0 24 24">
                        <circle cx="11" cy="11" r="8" />
                        <path d="M21 21l-4.35-4.35" />
                    </svg>
                </button>
            </div>
        </div>
    </header>

    <nav class="nav-menu">
        <ul>
            <li><a href="/inicio">Início</a></li>
            <li><a href="/cadastro-produtos">Cadastrar Produtos</a></li>
            <li><a href="/saida-estoque">Saída de Estoque</a></li>

            <% if (currentUser && currentUser.nivel_acesso === 'administrador') { %>
                <li><a href="/relatorios">Relatórios de Estoque</a></li>
                <li><a href="/gerenciar-usuarios">Gerenciar Usuário</a></li>
            <% } %>

            <li><a href="/sair">Sair da Conta</a></li>
        </ul>
    </nav>

    <div class="overlay"></div>

    <div class="main-content">
        <table class="products-table">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Marca</th>
                    <th>Fornecedor</th>
                    <th>Quantidade</th>
                    <th>Validade</th>
                    <th>Data de Entrada</th>
                </tr>
            </thead>
            <tbody id="produtosTableBody">
                <% if (typeof produtos !=='undefined' && produtos.length > 0) { %>
                    <% produtos.forEach(produto=> { %>
                        <tr data-nome="<%= produto.nome.toLowerCase() %>"
                            data-marca="<%= produto.marca.toLowerCase() %>"
                            data-fornecedor="<%= produto.fornecedor.toLowerCase() %>">
                            <td class="produto-nome">
                                <%= produto.nome %>
                            </td>
                            <td class="produto-marca">
                                <%= produto.marca %>
                            </td>
                            <td class="produto-fornecedor">
                                <%= produto.fornecedor %>
                            </td>
                            <td class="<%= produto.quantidade < 10 ? 'quantidade-low' : 'quantidade-normal' %>">
                                <%= produto.quantidade %>
                            </td>
                            <td>
                                <%= produto.data_validade %>
                            </td>
                            <td>
                                <%= produto.data_entrada %>
                            </td>
                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr id="noResultsRow">
                        <td colspan="6" class="no-results">Nenhum produto cadastrado no estoque.</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const hamburgerMenu = document.querySelector('.hamburger-menu');
            const navMenu = document.querySelector('.nav-menu');
            const overlay = document.querySelector('.overlay');

            hamburgerMenu.addEventListener('click', function () {
                this.classList.toggle('active');
                navMenu.classList.toggle('active');
                overlay.classList.toggle('active');
            });

            overlay.addEventListener('click', () => {
                hamburgerMenu.classList.remove('active');
                navMenu.classList.remove('active');
                overlay.classList.remove('active');
            });

            document.querySelectorAll('.nav-menu a').forEach(item => {
                item.addEventListener('click', () => {
                    hamburgerMenu.classList.remove('active');
                    navMenu.classList.remove('active');
                    overlay.classList.remove('active');
                });
            });

            const searchInput = document.querySelector('.search-input');
            const produtosTableBody = document.getElementById('produtosTableBody');
            const noResultsRow = document.getElementById('noResultsRow');

            // Inicialmente esconde a linha 'noResultsRow' se houver produtos
            if (produtosTableBody.children.length > 1 || (produtosTableBody.children.length === 1 && produtosTableBody.children[0].id !== 'noResultsRow')) {
                const initialNoResultsRow = document.getElementById('noResultsRow');
                if (initialNoResultsRow) {
                    initialNoResultsRow.style.display = 'none';
                }
            }


            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase().trim();
                let visibleRowCount = 0;

                Array.from(produtosTableBody.children).forEach(row => {
                    if (row.id === 'noResultsRow') return; // Ignora a linha de "nenhum resultado"

                    const produtoNome = row.getAttribute('data-nome');
                    const produtoMarca = row.getAttribute('data-marca');
                    const produtoFornecedor = row.getAttribute('data-fornecedor');

                    const nomeElement = row.querySelector('.produto-nome');
                    const marcaElement = row.querySelector('.produto-marca');
                    const fornecedorElement = row.querySelector('.produto-fornecedor');

                    // Armazena o conteúdo original para poder restaurá-lo
                    const nomeOriginal = nomeElement.dataset.originalContent || nomeElement.textContent;
                    const marcaOriginal = marcaElement.dataset.originalContent || marcaElement.textContent;
                    const fornecedorOriginal = fornecedorElement.dataset.originalContent || fornecedorElement.textContent;

                    // Guarda o conteúdo original se ainda não estiver guardado
                    if (!nomeElement.dataset.originalContent) {
                        nomeElement.dataset.originalContent = nomeOriginal;
                        marcaElement.dataset.originalContent = marcaOriginal;
                        fornecedorElement.dataset.originalContent = fornecedorOriginal;
                    }

                    // Restaura o conteúdo original para remover destaques anteriores
                    nomeElement.innerHTML = nomeOriginal;
                    marcaElement.innerHTML = marcaOriginal;
                    fornecedorElement.innerHTML = fornecedorOriginal;


                    if (searchTerm === '') {
                        row.style.display = '';
                        visibleRowCount++;
                    } else if (
                        produtoNome.includes(searchTerm) ||
                        produtoMarca.includes(searchTerm) ||
                        produtoFornecedor.includes(searchTerm)
                    ) {
                        row.style.display = '';
                        visibleRowCount++;

                        const regex = new RegExp(searchTerm, 'gi');

                        // Aplica destaque se o termo de pesquisa estiver na célula
                        if (nomeOriginal.toLowerCase().includes(searchTerm)) {
                            nomeElement.innerHTML = nomeOriginal.replace(regex, match => `<span class="highlight">${match}</span>`);
                        }
                        if (marcaOriginal.toLowerCase().includes(searchTerm)) {
                            marcaElement.innerHTML = marcaOriginal.replace(regex, match => `<span class="highlight">${match}</span>`);
                        }
                        if (fornecedorOriginal.toLowerCase().includes(searchTerm)) {
                            fornecedorElement.innerHTML = fornecedorOriginal.replace(regex, match => `<span class="highlight">${match}</span>`);
                        }

                    } else {
                        row.style.display = 'none';
                    }
                });

                if (visibleRowCount === 0) {
                    noResultsRow.style.display = '';
                } else {
                    noResultsRow.style.display = 'none';
                }
            });
        });
    </script>
</body>

</html>