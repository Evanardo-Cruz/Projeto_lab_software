<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controle de Estoque</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Reset e Estilos Gerais */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }

        body {
            background: #f5f7fa;
            overflow-x: hidden;
        }

        /* Header */
        .header-container {
            display: flex;
            align-items: center;
            padding: 15px 25px;
            background: #E08C27;
            /* Laranja */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 10;
        }

        /* Menu Hambúrguer - Posicionado à esquerda */
        .hamburger-menu {
            background: none;
            border: none;
            cursor: pointer;
            padding: 10px;
            height: 40px;
            width: 40px;
            position: relative;
            z-index: 100;
            margin-right: 15px;
        }

        .hamburger-icon {
            display: block;
            width: 24px;
            height: 2px;
            background: #FFFFFF;
            /* Branco */
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.3s ease;
        }

        .hamburger-icon:before,
        .hamburger-icon:after {
            content: '';
            display: block;
            width: 24px;
            height: 2px;
            background: #FFFFFF;
            /* Branco */
            position: absolute;
            left: 0;
            transition: all 0.3s ease;
        }

        .hamburger-icon:before {
            top: -8px;
        }

        .hamburger-icon:after {
            top: 8px;
        }

        .hamburger-menu.active .hamburger-icon {
            background: transparent;
        }

        .hamburger-menu.active .hamburger-icon:before {
            transform: translateY(8px) rotate(45deg);
            background: #FFFFFF; /* Branco (cor do X quando o menu está aberto) */
        }

        .hamburger-menu.active .hamburger-icon:after {
            transform: translateY(-8px) rotate(-45deg);
            background: #FFFFFF; /* Branco (cor do X quando o menu está aberto) */
        }

        /* Título ajustado */
        .page-title {
            color: #FFFFFF;
            /* Branco */
            font-size: 1.8rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin: 0 auto 0 0;
            padding-left: 20px;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: max-content;
        }

        /* Barra de Pesquisa - Removida deste layout */
        /* .search-container { } */

        /* Menu de Navegação - Agora como menu lateral */
        .nav-menu {
            position: fixed;
            top: 0;
            left: -300px;
            width: 250px;
            height: 100vh;
            background: #0E7F1B;
            /* Verde */
            transition: left 0.4s ease;
            z-index: 5;
            padding-top: 80px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2);
        }

        .nav-menu.active {
            left: 0;
        }

        .nav-menu ul {
            list-style: none;
            padding: 20px;
        }

        .nav-menu li {
            margin-bottom: 15px;
        }

        .nav-menu a {
            color: #FFFFFF;
            /* Branco */
            text-decoration: none;
            font-size: 1.1rem;
            transition: color 0.3s;
            display: block;
            padding: 12px 15px;
            border-radius: 5px;
        }

        .nav-menu a:hover {
            color: #E08C27;
            /* Laranja no hover */
            background: rgba(255, 255, 255, 0.1);
        }

        /* Overlay para quando o menu estiver aberto */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 4;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0.3s;
        }

        .overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Estilos específicos para o formulário de cadastro de produtos */
        .main-content {
            max-width: 800px;
            margin: 30px auto;
            padding: 30px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .main-content label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }

        .main-content input[type="text"],
        .main-content input[type="number"],
        .main-content textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            transition: border 0.3s;
        }

        .main-content input[type="text"]:focus,
        .main-content input[type="number"]:focus,
        .main-content textarea:focus {
            border-color: #E08C27;
            /* Laranja para foco */
            outline: none;
            box-shadow: 0 0 5px rgba(224, 140, 39, 0.5);
            /* Sombra laranja */
        }

        .main-content textarea {
            resize: vertical;
            min-height: 100px;
        }

        .btn-submit {
            display: block;
            width: 100%;
            padding: 12px;
            background-color: #E08C27;
            /* Laranja */
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-submit:hover {
            background-color: #cc7a1e;
            /* Laranja um pouco mais escuro no hover */
        }

        .price-container {
            position: relative;
        }

        .price-container::before {
            content: 'R$';
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #7f8c8d;
        }

        #preco {
            padding-left: 30px;
        }

        .uppercase-input {
            text-transform: uppercase;
        }

        .uppercase-input::placeholder {
            text-transform: none;
        }

        /* Estilo para o input de data - igual aos outros inputs */
        input[type="date"] {
            width: 100%;
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            background-color: white;
            appearance: none;
            -webkit-appearance: none;
        }

        /* Estilo para o foco - igual aos outros inputs */
        input[type="date"]:focus {
            outline: none;
            border-color: #E08C27;
            /* Laranja para foco */
            box-shadow: 0 0 0 2px rgba(224, 140, 39, 0.2);
            /* Sombra laranja */
        }

        /* Estilo para o ícone do calendário */
        input[type="date"]::-webkit-calendar-picker-indicator {
            background: transparent;
            padding: 0;
            margin-right: 5px;
            cursor: pointer;
            filter: brightness(0.7);
        }

        /* Estilo para quando estiver vazio */
        input[type="date"]:not(:focus):invalid {
            color: #999;
        }

        @media (max-width: 600px) {
            .main-content {
                margin: 20px;
                padding: 20px;
            }
        }
    </style>
</head>

<body>
    <header>
        <div class="header-container">
            <button class="hamburger-menu" aria-label="Abrir menu">
                <span class="hamburger-icon"></span>
            </button>

            <h1 class="page-title">CADASTRO DE PRODUTOS</h1>

        </div>
    </header>

    <nav class="nav-menu">
        <ul>
            <li><a href="/inicio">Início</a></li>
            <li><a href="/cadastro-produtos">Cadastrar Produtos</a></li>
            <li><a href="/saida-estoque">Saída de Estoque</a></li>
            <% if (currentUser && currentUser.nivel_acesso === 'administrador') { %>
                <li><a href="/relatorios">Relatórios de Estoque</a></li>
                <li><a href="/gerenciar-usuarios">Gerenciar Usuário</a></li>
                <% } %>
                    <li><a href="/cadastro">Sair da Conta</a></li>
        </ul>
    </nav>

    <main class="main-content">
        <h1>Cadastrar Produtos</h1>

        <form id="produtoForm" action="/cadastro-produtos" method="post">
            <div class="form-group">
                <label for="nome">Nome do Produto</label>
                <input type="text" id="nome" name="nome" placeholder="Digite o nome do produto" class="uppercase-input"
                    oninput="this.value = this.value.toUpperCase()" required>
            </div>

            <div class="form-group">
                <label for="marca">Marca</label>
                <input type="text" id="marca" name="marca" placeholder="Digite a marca do produto"
                    class="uppercase-input" oninput="this.value = this.value.toUpperCase()" required>
            </div>

            <div class="form-group">
                <label for="quantidade">Quantidade</label>
                <input type="number" id="quantidade" name="quantidade" placeholder="Digite a quantidade" required
                    min="1">
            </div>

            <div class="form-group">
                <label for="fornecedor">Fornecedor</label>
                <input type="text" id="fornecedor" name="fornecedor" placeholder="Digite o fornecedor"
                    class="uppercase-input" oninput="this.value = this.value.toUpperCase()" required>
            </div>

            <div class="form-group">
                <label for="data_de_validade">Data de Validade</label>
                <input type="date" id="data_de_validade" name="data_de_validade" required>
            </div>

            <button type="submit" class="btn-submit">Cadastrar Produto</button>
        </form>
    </main>

    <div class="modal fade" id="sucessoModal" tabindex="-1" aria-labelledby="sucessoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sucessoModalLabel">Sucesso</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    Produto cadastrado com sucesso!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" id="fecharModal">OK</button>
                </div>
            </div>
        </div>
    </div>

    <div class="overlay"></div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const hamburgerMenu = document.querySelector('.hamburger-menu');
            const navMenu = document.querySelector('.nav-menu');
            const overlay = document.querySelector('.overlay');

            hamburgerMenu.addEventListener('click', function () {
                this.classList.toggle('active');
                navMenu.classList.toggle('active');
                overlay.classList.toggle('active');
            });

            // Fechar menu ao clicar no overlay ou em um item
            overlay.addEventListener('click', () => {
                hamburgerMenu.classList.remove('active');
                navMenu.classList.remove('active');
                overlay.classList.remove('active');
            });

            document.querySelectorAll('.nav-menu a').forEach(item => {
                item.addEventListener('click', () => {
                    hamburgerMenu.classList.remove('active');
                    navMenu.classList.remove('active');
                    overlay.classList.remove('active');
                });
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('produtoForm');
            const modal = new bootstrap.Modal(document.getElementById('sucessoModal'));

            form.addEventListener('submit', async function (e) {
                e.preventDefault();

                try {
                    // Coletar os dados do formulário
                    const formData = new FormData(form);
                    const data = {
                        nome: formData.get('nome'),
                        marca: formData.get('marca'),
                        quantidade: formData.get('quantidade'),
                        fornecedor: formData.get('fornecedor'),
                        data_de_validade: formData.get('data_de_validade')
                    };

                    // Verificar se todos os campos estão preenchidos
                    if (!data.nome || !data.marca || !data.quantidade || !data.fornecedor || !data.data_de_validade) {
                        alert('Por favor, preencha todos os campos!');
                        return;
                    }

                    // Enviar os dados para o backend
                    const response = await fetch('/cadastro-produtos', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (result.success) {
                        modal.show();

                        // Configurar evento para quando o modal for fechado
                        document.getElementById('sucessoModal').addEventListener('hidden.bs.modal', function () {
                            window.location.reload();
                        });
                    } else {
                        alert('Erro ao cadastrar produto: ' + (result.error || 'Erro desconhecido'));
                    }
                } catch (error) {
                    console.error('Erro:', error);
                    alert('Erro ao enviar formulário');
                }
            });
        });
    </script>
</body>

</html>